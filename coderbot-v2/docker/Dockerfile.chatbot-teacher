# Multi-stage build para Chatbot-teacher
# Stage 1: Build da aplicação
FROM node:20-alpine AS builder

# Instalar dependências básicas
RUN apk add --no-cache curl git

# Clonar o repositório
WORKDIR /app
RUN git clone https://github.com/Mendes113/Chatbot-teacher.git .

# Instalar bun (já que o projeto usa bun.lockb)
RUN npm install -g bun

# Instalar dependências
RUN bun install

# Definir variáveis de ambiente para build (Vite)
ENV VITE_POCKETBASE_URL=/pb
ENV VITE_API_URL=/api
ENV NODE_ENV=production

# Build da aplicação
RUN bun run build

# Stage 2: Nginx para servir arquivos estáticos
FROM nginx:alpine AS production

# Copiar arquivos buildados
COPY --from=builder /app/dist /usr/share/nginx/html

# Criar configuração nginx para SPA
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 3000;' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name localhost;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Cache-Control "no-cache, no-store, must-revalidate";' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    location /assets/ {' >> /etc/nginx/conf.d/default.conf && \
    echo '        expires 1y;' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Cache-Control "public, immutable";' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# Copiar toda pasta do repositório temporariamente para verificar nginx.conf
COPY --from=builder /app /tmp/chatbot-teacher
RUN if [ -f /tmp/chatbot-teacher/nginx.conf ]; then \
        cp /tmp/chatbot-teacher/nginx.conf /etc/nginx/conf.d/default.conf; \
    fi && \
    rm -rf /tmp/chatbot-teacher

# Expor a porta (interna do container)
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Comando para iniciar nginx
CMD ["nginx", "-g", "daemon off;"]


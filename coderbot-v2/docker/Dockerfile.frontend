# Frontend Dockerfile with Node.js and pnpm
FROM node:20-alpine

# Instalar pnpm
RUN npm install -g pnpm

# Instalar curl para health checks
RUN apk add --no-cache curl

# Definir diretório de trabalho
WORKDIR /app

# Copiar apenas arquivos de configuração (assumindo contexto em coderbot-v2/frontend)
COPY package.json pnpm-lock.yaml ./

# Instalar dependências com cache do store do pnpm
RUN --mount=type=cache,target=/root/.pnpm-store pnpm install --frozen-lockfile --prefer-offline

# Copiar o código da aplicação
COPY . .

# Garantir remoção de artefatos não usados

RUN rm -rf src-tauri temp-tauri supabase 2>/dev/null || true

# ===== Build-time args para Vite =====
ARG VITE_API_URL=/api
ARG VITE_POCKETBASE_URL=/pb

# Definir variáveis de ambiente para build (lidas pelo Vite)
ENV NODE_ENV=production
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_POCKETBASE_URL=${VITE_POCKETBASE_URL}

# Build da aplicação para produção (falha se build falhar)
RUN pnpm run build

# Garante que o diretório dist foi criado
RUN test -d dist

# Expor a porta
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Comando para iniciar a aplicação
CMD ["pnpm", "run", "preview", "--host", "0.0.0.0", "--port", "3000"]

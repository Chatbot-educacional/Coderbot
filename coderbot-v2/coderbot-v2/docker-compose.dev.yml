services:
  # PocketBase Database
  pocketbase:
    build:
      context: .
      dockerfile: docker/Dockerfile.pocketbase.dev
    container_name: coderbot-pocketbase-dev
    ports:
      - "8090:8090"
    volumes:
      - ./pocketbase_0.27.2_linux_amd64/pb_migrations:/pb/pb_migrations:ro
      - pocketbase_data_dev:/pb/pb_data
    environment:
      - POCKETBASE_ADMIN_EMAIL=${POCKETBASE_ADMIN_EMAIL}
      - POCKETBASE_ADMIN_PASSWORD=${POCKETBASE_ADMIN_PASSWORD}
    networks:
      - coderbot-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API with Hot Reload
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend.dev
    container_name: coderbot-backend-dev
    ports:
      - "8000:8000"
    volumes:
      # Volume para hot reload - mapeia o código do backend
      - ./backend:/app
      # Volume para preservar node_modules/venv
      - backend_deps_dev:/app/.venv
    environment:
      - DEEP_SEEK_API_KEY=${DEEP_SEEK_API_KEY}
      - DEEP_SEEK_API_URL=${DEEP_SEEK_API_URL}
      - OPEN_AI_API_KEY=${OPEN_AI_API_KEY}
      - OPENAI_API_URL=${OPENAI_API_URL}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - POCKETBASE_URL=http://pocketbase:8090
      - PYTHONPATH=/app
      - DEVELOPMENT=true
    depends_on:
      pocketbase:
        condition: service_healthy
    networks:
      - coderbot-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App with Hot Reload
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend.dev
    container_name: coderbot-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      # Volume para hot reload - mapeia o código do frontend
      - ./frontend:/app
      # Volume para preservar node_modules
      - frontend_node_modules_dev:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
      - VITE_POCKETBASE_URL=http://localhost:8090
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - coderbot-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Code Server IDE (opcional)
  code-server:
    image: codercom/code-server:latest
    container_name: coderbot-code-server-dev
    ports:
      - "8787:8787"
    volumes:
      - ./:/home/coder/project
      - code_server_data_dev:/home/coder/.local/share/code-server
    networks:
      - coderbot-network-dev
    restart: unless-stopped
    command: --bind-addr 0.0.0.0:8787 --auth none /home/coder/project

volumes:
  pocketbase_data_dev:
    driver: local
  backend_deps_dev:
    driver: local
  frontend_node_modules_dev:
    driver: local
  code_server_data_dev:
    driver: local

networks:
  coderbot-network-dev:
    driver: bridge 